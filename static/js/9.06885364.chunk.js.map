{"version":3,"sources":["constant/hotel.js","services/shared/requests.js","services/hotel.js","services/hotelBooking.js","services/paymentInformation.js","services/index.js","hooks/booking.js","views/Booking/BookingHotel/BookingHotelList/helper.js","views/Booking/BookingHotel/BookingHotelList/BookingHotelList.js","views/Booking/BookingHotel/BookingHotelList/index.js"],"names":["__webpack_require__","d","__webpack_exports__","roomTypes","utilities","bank","status","code","name","responseSuccessInterceptor","response","responseErrorInterceptor","error","requestHelper","handleRequestError","Promise","reject","requestInterceptor","request","headers","Authorization","mainClient","axios","create","baseURL","REACT_APP_BASE_API_URL","forEach","client","interceptors","use","requests","hotel","createHotel","params","requestServices","post","then","res","data","getAllPayment","hotelId","get","concat","getHotel","getHotels","updateHotel","patch","hotelBooking","getHotelBookings","updateHotelBooking","bookingId","paymentInformation","createPaymentInformation","getQueryStringFromObj","objectHelpers","renderColumnsHotelBookings","onChangeStatus","title","dataIndex","align","width","render","item","menu","react_default","a","createElement","es_menu","allStatus","filter","x","map","el","Item","onClick","id","key","dropdown","overlay","trigger","tooltip","tag","color","stt","find","renderStatus","text","es_button","type","imageWitness","Modal","info","content","bankCode","accountName","paided","height","src","onOk","Fragment","guestName","guestPhoneNumber","guestEmail","renderRoom","roomType","rooms","guests","roomPrice","roomTax","getObjFromQueryString","BookingHotelList","location","browserHistory","_useBookingHotelsData","defaultParams","arguments","length","undefined","_useState","useState","_useState2","Object","slicedToArray","bookings","setBookings","_useState3","_useState4","queryParams","setQueryParams","_useState5","_useState6","loading","setLoading","_useState7","total","current","pageSize","showSizeChanger","pageSizeOptions","_useState8","pagination","setPagination","_ref","asyncToGenerator","regenerator_default","mark","_callee","_res$result","hotelBookings","page","pager","wrap","_context","prev","next","hotelBookingService","sent","result","objectSpread","finish","stop","this","_x","apply","useEffect","_","isEqual","push","search","handleTableChange","newQueryParams","fetchingBooking","useBookingHotelsData","className","card","extra","bodyStyle","padding","table","bordered","columns","newStatus","notification","success","message","rowKey","dataSource","onChange","HotelBookingList"],"mappings":"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","file":"static/js/9.06885364.chunk.js","sourcesContent":["export const roomTypes = [\r\n  { code: 'standard', name: 'Phòng tiêu chuẩn' },\r\n  { code: 'deluxe', name: 'Phòng sang trọng' },\r\n];\r\n\r\nexport const utilities = [\r\n  { code: 'wifi', name: 'Wifi' },\r\n  { code: 'drink', name: 'Đồ uống miễn phí' },\r\n  { code: 'bath', name: 'Phòng tắm sang trọng' },\r\n  { code: 'car', name: 'Đỗ xe miễn phí' },\r\n  { code: 'swim', name: 'Hồ bơi miễn phí' },\r\n];\r\n\r\nexport const bank = [\r\n  { code: 'VIETINBANK', name: 'Vietinbank' },\r\n  { code: 'VIETCOMBANK', name: 'Vietcombank' },\r\n  { code: 'BIDV', name: 'BIDV' },\r\n];\r\n\r\nexport const status = [\r\n  { code: 'pending_payment', name: 'Chờ thanh toán'},\r\n  { code: 'pending_confirm', name: 'Chờ xác nhận'},\r\n  { code: 'confirmed', name: 'Đã xác nhận'},\r\n  { code: 'cancelled', name: 'Đã hủy'},\r\n  { code: 'done', name: 'Đã hoàn thành'},\r\n];\r\n","// @flow\r\nimport axios from 'axios';\r\nimport { requestHelper } from 'helpers';\r\n\r\nimport { REACT_APP_BASE_API_URL } from 'configs';\r\n\r\nconst getAuthorization = () => {\r\n  return '';\r\n};\r\n\r\nconst responseSuccessInterceptor = (response) => {\r\n  return response;\r\n};\r\n\r\nconst responseErrorInterceptor = (error) => {\r\n  requestHelper.handleRequestError(error);\r\n  return Promise.reject(error);\r\n};\r\n\r\nconst requestInterceptor = (request) => {\r\n  request.headers.Authorization = getAuthorization();\r\n  return request;\r\n};\r\n\r\nconst mainClient = axios.create({\r\n  baseURL: REACT_APP_BASE_API_URL,\r\n});\r\n\r\nconst clients = [mainClient];\r\n\r\nclients.forEach((client) => {\r\n  client.interceptors.request.use(requestInterceptor);\r\n  client.interceptors.response.use(\r\n    responseSuccessInterceptor,\r\n    responseErrorInterceptor,\r\n  );\r\n});\r\n\r\nexport default {\r\n  mainClient,\r\n};\r\n","import { requestServices } from './shared';\r\n\r\n\r\nconst createHotel = (params) => {\r\n  return requestServices.mainClient.post(\r\n    '/hotels',\r\n    params,\r\n  ).then(res => res.data);\r\n};\r\n\r\nconst getHotel = (hotelId) => {\r\n  return requestServices.mainClient.get(\r\n    `/hotels/${hotelId}`,\r\n  ).then(res => res.data);\r\n};\r\n\r\nconst getHotels = (params) => {\r\n  return requestServices.mainClient.get(\r\n    '/hotels', { params }\r\n  ).then(res => res.data);\r\n};\r\n\r\nconst updateHotel = (hotelId, params) => {\r\n  return requestServices.mainClient.patch(\r\n    `/hotels/${hotelId}`, params\r\n  ).then(res => res.data);\r\n};\r\n\r\nconst getAllPayment = (hotelId) => {\r\n  return requestServices.mainClient.get(\r\n    `/hotels/${hotelId}/payment/get-all`,\r\n  ).then(res => res.data);\r\n};\r\n\r\nexport default {\r\n  createHotel,\r\n  getAllPayment,\r\n  getHotel,\r\n  getHotels,\r\n  updateHotel,\r\n}\r\n","import { requestServices } from './shared';\r\n\r\nconst getHotelBookings = (params) => {\r\n  return requestServices.mainClient.get(\r\n    '/hotel-bookings', { params }\r\n  ).then(res => res.data);\r\n};\r\n\r\nconst updateHotelBooking = (bookingId, params) => {\r\n  return requestServices.mainClient.patch(\r\n    `/hotel-bookings/${bookingId}`, params\r\n  ).then(res => res.data);\r\n};\r\n\r\nexport default {\r\n  getHotelBookings,\r\n  updateHotelBooking\r\n}\r\n","import { requestServices } from './shared';\r\n\r\n\r\nconst createPaymentInformation = (params) => {\r\n  return requestServices.mainClient.post(\r\n    '/payment-informations',\r\n    params,\r\n  ).then(res => res.data);\r\n};\r\n\r\nexport default {\r\n  createPaymentInformation,\r\n}\r\n","export { default as hotelService } from './hotel';\r\nexport { default as hotelBookingService } from './hotelBooking';\r\nexport { default as paymentInformationService } from './paymentInformation';\r\n","import { useState, useEffect } from 'react';\r\nimport _ from 'lodash';\r\nimport { browserHistory, objectHelpers } from '../helpers';\r\nimport { hotelBookingService } from '../services';\r\n\r\nconst { getQueryStringFromObj } = objectHelpers;\r\n\r\nexport const useBookingHotelsData = (defaultParams = {}) => {\r\n  const [bookings, setBookings] = useState([]);\r\n  const [queryParams, setQueryParams] = useState(defaultParams);\r\n  const [loading, setLoading] = useState(false);\r\n  const [pagination, setPagination] = useState({\r\n    total: 0,\r\n    current: 1,\r\n    pageSize: 10,\r\n    showSizeChanger: true,\r\n    pageSizeOptions: ['10', '20', '40', '60', '80', '100'],\r\n  });\r\n\r\n  const getHotelBookings = async params => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await hotelBookingService.getHotelBookings(params);\r\n      if (res.result) {\r\n        const { hotelBookings, total, page, pageSize } = res.result;\r\n        setBookings(hotelBookings);\r\n        const pager = { ...pagination };\r\n        pager.total = total;\r\n        pager.current = page;\r\n        pager.pageSize = pageSize;\r\n        setPagination(pager);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTableChange = pagination => {\r\n    const newQueryParams = {\r\n      ...queryParams,\r\n      page: pagination.current,\r\n      pageSize: pagination.pageSize,\r\n    };\r\n    setQueryParams(newQueryParams);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!_.isEqual(defaultParams, queryParams)) {\r\n      browserHistory.push({\r\n        search: getQueryStringFromObj(queryParams),\r\n      });\r\n    } else {\r\n      getHotelBookings(queryParams);\r\n    }\r\n  }, [queryParams]);\r\n\r\n  return {\r\n    bookings,\r\n    pagination,\r\n    handleTableChange,\r\n    queryParams,\r\n    setQueryParams,\r\n    fetchingBooking: loading,\r\n  };\r\n};\r\n","import { Button, Tag, Tooltip, Dropdown, Menu, Modal } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { ZoomInOutlined } from '@ant-design/icons';\r\nimport { roomTypes, status as allStatus } from '../../../../constant/hotel';\r\n\r\nconst renderRoom = (code) => {\r\n  const type = roomTypes.find(x => x.code === code);\r\n  if (type)\r\n    return type.name;\r\n  return null;\r\n};\r\n\r\nconst renderStatus = (code) => {\r\n  const stt = allStatus.find(x => x.code === code);\r\n  if (stt)\r\n    return stt.name;\r\n  return null;\r\n};\r\n\r\nexport const renderColumnsHotelBookings = (onChangeStatus) => {\r\n  return [\r\n    {\r\n      title: 'ID',\r\n      dataIndex: 'id',\r\n      align: 'center',\r\n      width: 70,\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      dataIndex: 'status',\r\n      render: (status, item) => {\r\n        const menu = (\r\n          <Menu>\r\n            {allStatus.filter(x => x.code !== status).map(el => (\r\n              <Menu.Item onClick={() => onChangeStatus(item.id, el.code)} key={el.code}>{el.name}</Menu.Item>\r\n            ))}\r\n          </Menu>\r\n        );\r\n        return (\r\n          <Dropdown overlay={menu} trigger={['click']}>\r\n            <Tooltip title=\"Bấm để sửa\">\r\n              <Tag color=\"red\">{renderStatus(status)}</Tag>\r\n            </Tooltip>\r\n          </Dropdown>\r\n        )\r\n      },\r\n      align: 'center',\r\n    },\r\n    {\r\n      title: 'Thanh toán',\r\n      key: 'view',\r\n      render: (text, item) => {\r\n        const handleViewPayment = () => {\r\n          if (!item.imageWitness) {\r\n            Modal.info({\r\n              title: 'Thông báo',\r\n              content: (\r\n                <div>Đơn đặt phòng chưa thanh toán</div>\r\n              ),\r\n              onOk() {},\r\n            });\r\n            return;\r\n          }\r\n          Modal.info({\r\n            title: 'Thông tin thanh toán',\r\n            content: (\r\n              <div>\r\n                <div>Ngân hàng: {item.bankCode}</div>\r\n                <div>Tên tài khoản: {item.accountName}</div>\r\n                <div>Số tiền: {item.paided}</div>\r\n                <img width=\"100%\" height=\"100%\" src={item.imageWitness} />\r\n              </div>\r\n            ),\r\n            onOk() {},\r\n          })\r\n        };\r\n        return (\r\n          <Button type=\"link\" onClick={handleViewPayment}>Xem thanh toán</Button>\r\n        )\r\n      },\r\n      align: 'center',\r\n    },\r\n    {\r\n      title: 'Khách đặt phòng',\r\n      render: (text, item) => {\r\n        return (\r\n          <>\r\n            <div>Tên: {item.guestName}</div>\r\n            <div>SĐT: {item.guestPhoneNumber}</div>\r\n            <div>Email: {item.guestEmail}</div>\r\n          </>\r\n        )\r\n      },\r\n      key: 'abc',\r\n      align: 'center',\r\n    },\r\n    {\r\n      title: 'Thông tin phòng',\r\n      render: (text, item) => {\r\n        return (\r\n          <>\r\n            <div>Khách sạn: {item.hotel.name}</div>\r\n            <div>Loại phòng: {renderRoom(item.roomType)}</div>\r\n            <div>Số phòng: {item.rooms}</div>\r\n            <div>Số khách: {item.guests}</div>\r\n          </>\r\n        )\r\n      },\r\n      key: 'def',\r\n      align: 'center',\r\n    },\r\n    {\r\n      title: 'Thông tin giá',\r\n      render: (text, item) => {\r\n        return (\r\n          <>\r\n            <div>Giá phòng / 1 đêm: {item.roomPrice} VNĐ</div>\r\n            <div>Thuế: {item.roomTax} %</div>\r\n          </>\r\n        )\r\n      },\r\n      key: 'ghi',\r\n      align: 'center',\r\n    },\r\n    {\r\n      title: 'Ngày checkin',\r\n      dataIndex: 'checkinDate',\r\n      align: 'center',\r\n    },\r\n    {\r\n      title: 'Ngày checkout',\r\n      dataIndex: 'checkoutDate',\r\n      align: 'center',\r\n    },\r\n  ];\r\n};\r\n","import React from 'react';\r\nimport { browserHistory, objectHelpers } from '../../../../helpers';\r\nimport { useBookingHotelsData} from '../../../../hooks/booking';\r\nimport { Card, notification, Table } from 'antd';\r\nimport { renderColumnsHotelBookings } from './helper';\r\nimport { hotelBookingService } from '../../../../services';\r\n\r\nconst { getObjFromQueryString } = objectHelpers;\r\n\r\nconst BookingHotelList = () => {\r\n  const { location } = browserHistory;\r\n  const defaultParams = location.search\r\n    ? getObjFromQueryString(location.search)\r\n    : { page: 1, pageSize: 10 };\r\n\r\n  const {\r\n    bookings,\r\n    pagination,\r\n    handleTableChange,\r\n    queryParams,\r\n    setQueryParams,\r\n    fetchingBooking,\r\n  } = useBookingHotelsData(defaultParams);\r\n\r\n  const onChangeStatus = (bookingId, newStatus) => {\r\n    hotelBookingService.updateHotelBooking(bookingId, { status: newStatus })\r\n      .then(() => {\r\n        notification.success({\r\n          message: 'Thay đổi trạng thái thành công',\r\n        });\r\n        const newQueryParams = { ...queryParams };\r\n        setQueryParams(newQueryParams)\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"seller-block\">\r\n      {/*<Card*/}\r\n        {/*title=\"Tìm kiếm đặt phòng\"*/}\r\n        {/*bodyStyle={{*/}\r\n          {/*padding: 0,*/}\r\n        {/*}}*/}\r\n      {/*>*/}\r\n       {/*Ductt*/}\r\n      {/*</Card>*/}\r\n      <Card\r\n        className=\"mt-3\"\r\n        title=\"Danh sách đặt phòng\"\r\n        extra={\r\n          <span className=\"total\">\r\n            Tổng số đơn đặt phòng: {pagination.total || 0}\r\n          </span>\r\n        }\r\n        bodyStyle={{\r\n          padding: '1rem',\r\n        }}\r\n      >\r\n        <Table\r\n          bordered\r\n          columns={renderColumnsHotelBookings(onChangeStatus)}\r\n          rowKey=\"id\"\r\n          dataSource={bookings}\r\n          pagination={pagination}\r\n          loading={fetchingBooking}\r\n          onChange={handleTableChange}\r\n        />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingHotelList;\r\n","import HotelBookingList from './BookingHotelList';\r\n\r\nexport default HotelBookingList;\r\n"],"sourceRoot":""}